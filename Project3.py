# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Project.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pymysql as mdb

class Ui_MainWindow(object):


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(675, 510)
        MainWindow.setStyleSheet("background-color: rgb(205, 254, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget.setFont(font)
        self.tabWidget.setStatusTip("")
        self.tabWidget.setAccessibleDescription("")
        self.tabWidget.setStyleSheet("background-color: rgb(205, 254, 255);")
        self.tabWidget.setInputMethodHints(QtCore.Qt.ImhNone)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_2AddTeacher = QtWidgets.QWidget()
        self.tab_2AddTeacher.setObjectName("tab_2AddTeacher")
        self.pushButtonAddTeacher = QtWidgets.QPushButton(self.tab_2AddTeacher)
        self.pushButtonAddTeacher.setGeometry(QtCore.QRect(240, 320, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonAddTeacher.setFont(font)
        self.pushButtonAddTeacher.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButtonAddTeacher.setObjectName("pushButtonAddTeacher")
        self.Response_Message_frame = QtWidgets.QFrame(self.tab_2AddTeacher)
        self.Response_Message_frame.setGeometry(QtCore.QRect(170, 20, 311, 131))
        self.Response_Message_frame.setMaximumSize(QtCore.QSize(600, 400))
        self.Response_Message_frame.setStyleSheet("color:rgb(255,255,255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius: 20px;")
        self.Response_Message_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Response_Message_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Response_Message_frame.setObjectName("Response_Message_frame")
        self.Response_Message_button = QtWidgets.QPushButton(self.Response_Message_frame)
        self.Response_Message_button.setGeometry(QtCore.QRect(110, 80, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.Response_Message_button.setFont(font)
        self.Response_Message_button.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 255, 255);\n"
"border-radius: 10px")
        self.Response_Message_button.setAutoDefault(False)
        self.Response_Message_button.setDefault(False)
        self.Response_Message_button.setFlat(False)
        self.Response_Message_button.setObjectName("Response_Message_button")
        self.Response_Message_label = QtWidgets.QLabel(self.Response_Message_frame)
        self.Response_Message_label.setGeometry(QtCore.QRect(10, 20, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.Response_Message_label.setFont(font)
        self.Response_Message_label.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.Response_Message_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Response_Message_label.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 255, 255);\n"
"border-radius: 10px;")
        self.Response_Message_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Response_Message_label.setLineWidth(2)
        self.Response_Message_label.setAlignment(QtCore.Qt.AlignCenter)
        self.Response_Message_label.setObjectName("Response_Message_label")
        self.splitter_3 = QtWidgets.QSplitter(self.tab_2AddTeacher)
        self.splitter_3.setGeometry(QtCore.QRect(130, 210, 421, 91))
        self.splitter_3.setOrientation(QtCore.Qt.Vertical)
        self.splitter_3.setObjectName("splitter_3")
        self.splitter_2 = QtWidgets.QSplitter(self.splitter_3)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.Name = QtWidgets.QLabel(self.splitter_2)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.Name.setFont(font)
        self.Name.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Name.setObjectName("Name")
        self.TeacherName = QtWidgets.QLineEdit(self.splitter_2)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        self.TeacherName.setFont(font)
        self.TeacherName.setToolTip("")
        self.TeacherName.setStatusTip("")
        self.TeacherName.setWhatsThis("")
        self.TeacherName.setAccessibleDescription("")
        self.TeacherName.setAutoFillBackground(False)
        self.TeacherName.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.TeacherName.setInputMethodHints(QtCore.Qt.ImhNone)
        self.TeacherName.setText("")
        self.TeacherName.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.TeacherName.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.TeacherName.setClearButtonEnabled(False)
        self.TeacherName.setObjectName("TeacherName")
        self.splitter = QtWidgets.QSplitter(self.splitter_3)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.Type = QtWidgets.QLabel(self.splitter)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.Type.setFont(font)
        self.Type.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Type.setObjectName("Type")
        self.comboBoxType = QtWidgets.QComboBox(self.splitter)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.comboBoxType.setFont(font)
        self.comboBoxType.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBoxType.setObjectName("comboBoxType")
        self.comboBoxType.addItem("")
        self.comboBoxType.addItem("")
        self.tabWidget.addTab(self.tab_2AddTeacher, "")

        # When login button is clicked
        self.pushButtonAddTeacher.clicked.connect(self.validateTeacherFields)
        #################################################################################
        # Call to Validate LOGIN Form
        #################################################################################

        #################################################################################
        # Hide login response container
        #################################################################################
        # Hide loin response container when application is loaded
        self.Response_Message_frame.hide()
        # Hide loin response container when OK Button is clicked
        self.Response_Message_button.clicked.connect(lambda: self.Response_Message_frame.hide())









        self.tab_3AddCourse = QtWidgets.QWidget()
        self.tab_3AddCourse.setObjectName("tab_3AddCourse")
        self.pushButtonAddCourse = QtWidgets.QPushButton(self.tab_3AddCourse)
        self.pushButtonAddCourse.setGeometry(QtCore.QRect(240, 320, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonAddCourse.setFont(font)
        self.pushButtonAddCourse.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButtonAddCourse.setObjectName("pushButtonAddCourse")
        self.Response_Message_frame_2 = QtWidgets.QFrame(self.tab_3AddCourse)
        self.Response_Message_frame_2.setGeometry(QtCore.QRect(170, 20, 311, 131))
        self.Response_Message_frame_2.setMaximumSize(QtCore.QSize(600, 400))
        self.Response_Message_frame_2.setStyleSheet("color:rgb(255,255,255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius: 20px;")
        self.Response_Message_frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Response_Message_frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Response_Message_frame_2.setObjectName("Response_Message_frame_2")
        self.Response_Message_button_2 = QtWidgets.QPushButton(self.Response_Message_frame_2)
        self.Response_Message_button_2.setGeometry(QtCore.QRect(110, 80, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.Response_Message_button_2.setFont(font)
        self.Response_Message_button_2.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 255, 255);\n"
"border-radius: 10px")
        self.Response_Message_button_2.setAutoDefault(False)
        self.Response_Message_button_2.setDefault(False)
        self.Response_Message_button_2.setFlat(False)
        self.Response_Message_button_2.setObjectName("Response_Message_button_2")
        self.Response_Message_label_2 = QtWidgets.QLabel(self.Response_Message_frame_2)
        self.Response_Message_label_2.setGeometry(QtCore.QRect(10, 20, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.Response_Message_label_2.setFont(font)
        self.Response_Message_label_2.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 255, 255);\n"
"border-radius: 10px;")
        self.Response_Message_label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.Response_Message_label_2.setObjectName("Response_Message_label_2")
        self.splitter_6 = QtWidgets.QSplitter(self.tab_3AddCourse)
        self.splitter_6.setGeometry(QtCore.QRect(130, 210, 421, 91))
        self.splitter_6.setOrientation(QtCore.Qt.Vertical)
        self.splitter_6.setObjectName("splitter_6")
        self.splitter_4 = QtWidgets.QSplitter(self.splitter_6)
        self.splitter_4.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_4.setObjectName("splitter_4")
        self.Name_2 = QtWidgets.QLabel(self.splitter_4)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.Name_2.setFont(font)
        self.Name_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Name_2.setObjectName("Name_2")
        self.CourseTitle = QtWidgets.QLineEdit(self.splitter_4)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        self.CourseTitle.setFont(font)
        self.CourseTitle.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.CourseTitle.setReadOnly(False)
        self.CourseTitle.setObjectName("CourseTitle")
        self.splitter_5 = QtWidgets.QSplitter(self.splitter_6)
        self.splitter_5.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_5.setObjectName("splitter_5")
        self.CourseCode = QtWidgets.QLabel(self.splitter_5)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.CourseCode.setFont(font)
        self.CourseCode.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.CourseCode.setObjectName("CourseCode")
        self.Code = QtWidgets.QLineEdit(self.splitter_5)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        self.Code.setFont(font)
        self.Code.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Code.setObjectName("Code")
        self.tabWidget.addTab(self.tab_3AddCourse, "")

        # When login button is clicked
        self.pushButtonAddCourse.clicked.connect(self.validateCourseFields)
        #################################################################################
        # Call to Validate LOGIN Form
        #################################################################################

        #################################################################################
        # Hide login response container
        #################################################################################
        # Hide loin response container when application is loaded
        self.Response_Message_frame_2.hide()
        # Hide loin response container when OK Button is clicked
        self.Response_Message_button_2.clicked.connect(lambda: self.Response_Message_frame_2.hide())


        self.tab_4Assign = QtWidgets.QWidget()
        self.tab_4Assign.setObjectName("tab_4Assign")
        self.pushButtonAssign = QtWidgets.QPushButton(self.tab_4Assign)
        self.pushButtonAssign.setGeometry(QtCore.QRect(240, 320, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonAssign.setFont(font)
        self.pushButtonAssign.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButtonAssign.setObjectName("pushButtonAssign")
        self.Response_Message_frame_3 = QtWidgets.QFrame(self.tab_4Assign)
        self.Response_Message_frame_3.setGeometry(QtCore.QRect(170, 20, 311, 131))
        self.Response_Message_frame_3.setMaximumSize(QtCore.QSize(600, 400))
        self.Response_Message_frame_3.setStyleSheet("color:rgb(255,255,255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius: 20px;")
        self.Response_Message_frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Response_Message_frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Response_Message_frame_3.setObjectName("Response_Message_frame_3")
        self.Response_Message_button_3 = QtWidgets.QPushButton(self.Response_Message_frame_3)
        self.Response_Message_button_3.setGeometry(QtCore.QRect(110, 80, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.Response_Message_button_3.setFont(font)
        self.Response_Message_button_3.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 255, 255);\n"
"border-radius: 10px")
        self.Response_Message_button_3.setAutoDefault(False)
        self.Response_Message_button_3.setDefault(False)
        self.Response_Message_button_3.setFlat(False)
        self.Response_Message_button_3.setObjectName("Response_Message_button_3")
        self.Response_Message_label_3 = QtWidgets.QLabel(self.Response_Message_frame_3)
        self.Response_Message_label_3.setGeometry(QtCore.QRect(10, 20, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.Response_Message_label_3.setFont(font)
        self.Response_Message_label_3.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 255, 255);\n"
"border-radius: 10px;")
        self.Response_Message_label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.Response_Message_label_3.setObjectName("Response_Message_label_3")
        self.widget = QtWidgets.QWidget(self.tab_4Assign)
        self.widget.setGeometry(QtCore.QRect(128, 210, 81, 91))
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.Name_3 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.Name_3.setFont(font)
        self.Name_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Name_3.setObjectName("Name_3")
        self.verticalLayout_2.addWidget(self.Name_3)
        self.Type_2 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.Type_2.setFont(font)
        self.Type_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Type_2.setObjectName("Type_2")
        self.verticalLayout_2.addWidget(self.Type_2)
        self.widget1 = QtWidgets.QWidget(self.tab_4Assign)
        self.widget1.setGeometry(QtCore.QRect(220, 200, 321, 111))
        self.widget1.setObjectName("widget1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.comboBoxTeacher = QtWidgets.QComboBox(self.widget1)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.comboBoxTeacher.setFont(font)
        self.comboBoxTeacher.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBoxTeacher.setObjectName("comboBoxTeacher")
        self.verticalLayout.addWidget(self.comboBoxTeacher)
        self.comboBoxCourse = QtWidgets.QComboBox(self.widget1)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.comboBoxCourse.setFont(font)
        self.comboBoxCourse.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBoxCourse.setObjectName("comboBoxCourse")
        self.verticalLayout.addWidget(self.comboBoxCourse)
        self.tabWidget.addTab(self.tab_4Assign, "")









        self.verticalLayout_3.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 675, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_2 = QtWidgets.QAction(MainWindow)
        self.actionSave_2.setObjectName("actionSave_2")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionSave_2)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #### Assign tab ##########

        self.showTeacherCombobox()
        self.showCourseCombobox()

        self.Response_Message_frame_3.hide()
        # Hide loin response container when OK Button is clicked
        self.Response_Message_button_3.clicked.connect(lambda: self.Response_Message_frame_3.hide())

        self.pushButtonAssign.clicked.connect(self.showAssigningTeacher)



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButtonAddTeacher.setText(_translate("MainWindow", "Add Teacher"))
        self.Response_Message_button.setText(_translate("MainWindow", "OK"))
        self.Response_Message_label.setText(_translate("MainWindow", "Response Message"))
        self.Name.setText(_translate("MainWindow", "Name"))
        self.TeacherName.setPlaceholderText(_translate("MainWindow", "Teacher Name"))
        self.Type.setText(_translate("MainWindow", "Type"))
        self.comboBoxType.setItemText(0, _translate("MainWindow", "Regular"))
        self.comboBoxType.setItemText(1, _translate("MainWindow", "Visiting"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2AddTeacher), _translate("MainWindow", "Add Teacher"))
        self.pushButtonAddCourse.setText(_translate("MainWindow", "Add Course"))
        self.Response_Message_button_2.setText(_translate("MainWindow", "OK"))
        self.Response_Message_label_2.setText(_translate("MainWindow", "Response Message"))
        self.Name_2.setText(_translate("MainWindow", "Name"))
        self.CourseTitle.setPlaceholderText(_translate("MainWindow", "Course Title"))
        self.CourseCode.setText(_translate("MainWindow", "CourseCode"))
        self.Code.setPlaceholderText(_translate("MainWindow", "####"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3AddCourse), _translate("MainWindow", "Add Course"))
        self.pushButtonAssign.setText(_translate("MainWindow", "Assign"))
        self.Response_Message_button_3.setText(_translate("MainWindow", "OK"))
        self.Response_Message_label_3.setText(_translate("MainWindow", "Response Message"))
        self.Name_3.setText(_translate("MainWindow", "Teacher"))
        self.Type_2.setText(_translate("MainWindow", "Course"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4Assign), _translate("MainWindow", "Assign"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave_2.setText(_translate("MainWindow", "Save"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))


# Show LOGIN response msg
    def showTeacherResponse(self, responseMessage):
        # Show the login response container
        self.Response_Message_frame.show()
        # Update the login response text
        self.Response_Message_label.setText(responseMessage)

    # Validate login field values
    def validateTeacherFields(self):
        # Styles to be used to highlight input fiels on error or success
        successStyle = "border:3px solid  rgb(0, 255, 255);border-radius: 10px;"
        errorStyle = "border:3px solid  rgb(255, 0, 0);border-radius: 10px;"

        # Check TeacherName
        if not self.TeacherName.text():
            # TeacherName is empty
            TeacherNameResponse = "Name can not be Empty."
            self.TeacherName.setStyleSheet(errorStyle)
        else:
            TeacherNameResponse = "no_error"
            self.TeacherName.setStyleSheet(successStyle)



        # View responses
        if TeacherNameResponse == "no_error":
            con = mdb.connect('localhost', 'root', '', 'interactive_scheduler')
            with con.cursor() as cur:
                name = self.TeacherName.text()
                type = self.comboBoxType.currentText()
                query = "INSERT INTO teacher(Name, Type) VALUES(%s,%s)"
                try:
                    cur.execute(query, (name,type))
                    loginResponse = self.TeacherName.text() + " added as " + self.comboBoxType.currentText()
                    self.showTeacherResponse(loginResponse)

                except:
                    loginResponse = "Teacher Name Already Exists"
                    self.showTeacherResponse(loginResponse)
                con.commit()
                cur.close()
                con.close()



        else:
            loginResponse = TeacherNameResponse
            self.showTeacherResponse(loginResponse)

    def showCourseResponse(self, responseMessage_2):
        # Show the login response container
        self.Response_Message_frame_2.show()
        # Update the login response text
        self.Response_Message_label_2.setText(responseMessage_2)

    def showAssigningResponse(self, response3):
        self.Response_Message_frame_3.show()
        self.Response_Message_label_3.setText(response3)

        # Validate login field values

    def validateCourseFields(self):
        # Styles to be used to highlight input fiels on error or success
        successStyle = "border:3px solid  rgb(0, 255, 255);border-radius: 10px;"
        errorStyle = "border:3px solid  rgb(255, 0, 0);border-radius: 10px;"

        # Check CourseTitle
        if not self.CourseTitle.text():
            # CourseTitle is empty
            CourseTitleResponse = " Name can not be Empty. "
            self.CourseTitle.setStyleSheet(errorStyle)
        else:
            CourseTitleResponse = ""
            self.CourseTitle.setStyleSheet(successStyle)

        # Check Code
        if not self.Code.text():
            # Code is empty
            CodeResponse = "CourseCode can not be Empty. "
            self.Code.setStyleSheet(errorStyle)
        else:
            CodeResponse = ""
            self.Code.setStyleSheet(successStyle)

        # View responses
        if CodeResponse == "" or CourseTitleResponse == "":
            con = mdb.connect('localhost', 'root', '', 'interactive_scheduler')
            with con.cursor() as cur:
                name = self.CourseTitle.text()
                code = self.Code.text()
                query = "INSERT INTO course(Name, Course_Code) VALUES(%s,%s)"
                try:
                    cur.execute(query, (name, code))
                    loginResponse_2 = self.CourseTitle.text() + " added as CourseCode " + self.Code.text()
                    self.showCourseResponse(loginResponse_2)
                except:
                    loginResponse_2 = "Course Name Already Exists"
                    self.showCourseResponse(loginResponse_2)
                con.commit()
                cur.close()
                con.close()

        else:
            loginResponse_2 = CourseTitleResponse + CodeResponse
            self.showCourseResponse(loginResponse_2)

    ##############################################################

    def showTeacherCombobox(self):
        con = mdb.connect('localhost', 'root', '', 'interactive_scheduler')
        with con.cursor() as cur:
            query="select Name from teacher"
            cur.execute(query)
            data= cur.fetchall()

            for tdata in data:
                self.comboBoxTeacher.addItem(tdata[0])

            con.commit()
            cur.close()
            con.close()

    def showCourseCombobox(self):
        con = mdb.connect('localhost', 'root', '', 'interactive_scheduler')
        with con.cursor() as cur:
            query = "select Name from course"
            cur.execute(query)
            data = cur.fetchall()

            for cdata in data:
                self.comboBoxCourse.addItem(cdata[0])

            con.commit()
            cur.close()
            con.close()

    def showAssigningTeacher(self):
        con = mdb.connect('localhost', 'root', '', 'interactive_scheduler')
        with con.cursor() as cur:

            try:

                query = "select id from teacher where Name= %s"
                cur.execute(query, self.comboBoxTeacher.currentText())
                teacherid= cur.fetchall()

                query2 = "select id from course where Name= %s"
                cur.execute(query2, self.comboBoxCourse.currentText())
                courseid= cur.fetchall()

                query3 = "insert into course_teacher (Teacher_id, Course_id) values(%s, %s)"
                cur.execute(query3, (teacherid, courseid))

                self.showAssigningResponse("Course "+ self.comboBoxCourse.currentText() +" Assigned to Teacher " + self.comboBoxTeacher.currentText())

            except:
                self.showAssigningResponse("Failed to Assign Course")

            con.commit()
            cur.close()
            con.close()





if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()

    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
